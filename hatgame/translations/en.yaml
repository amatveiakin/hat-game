# Common
cancel: Cancel
hat_game: Hat Game
join_game: Join Game
new_game_online: New Game Online
next: Next
ok: OK
turn_order: Turn Order

# lib/start_screen.dart
about_the_app: About the app
app_version: "This app is in Beta. Version: {}"
hat_game_rules: Hat game rules
new_local_game: New Local Game

# lib/game_config_view.dart
cannot_copy_link_to_clipboard: 'Cannot copy link to clipboard :('
game_join_link: Game join link
hat_game_id: 'Hat Game ID: {}'
link_copied_to_clipboard: Link copied to clipboard
write_words_titlecase: Write Words

# lib/offline_player_config_view.dart
add_player: Add player
add_team: Add team

# lib/write_words_view.dart
generate_a_random_word: Generate a random word
player_readiness: 'Ready: {ready}/{total}'
waiting_for: 'Waiting for: '
word_contains_invalid_character: "Word contains invalid character: '{char}' (code {code})"
word_is_empty: Word is empty
word_is_too_long: Word is too long
write_your_words: Write Your Words

# lib/partying_strategy.dart
at_least_one_player_required: At least one player is required
at_least_two_players_required: At least two players are required for this mode
cannot_make_teams: Cannot make teams
team_has_only_one_player: A team has only one player
there_are_zero_teams: There are zero teams
there_is_only_one_team: There is only one team

# lib/lexicon.dart
cannot_find_dictionary: Cannot find dictionary "{}"

# lib/widget/invalid_operation_dialog.dart
internal_error: Internal error!

# lib/online_player_config_view.dart
confirm_kick_player: Are you sure you want to kick {}?
kick: Kick

# lib/team_compositions_view.dart
new_random_teams_and_turn_order: New random teams and turn order
new_random_turn_order: New random turn order
start_game: Start Game!
team_compositions: Team Compositions

# lib/kicked_screen.dart
you_have_been_kicked: You have been kicked from this game

# lib/start_game_online_screen.dart
create_game: Create Game
game_id: Game ID
game_id_is_empty: Game ID is empty
join_game_online: Join Game Online
player_exists_confirm_reconnect: A player with this name already exists! Reconnect as {name}?
reconnect: Reconnect
reconnect_as: Reconnect as {name}?
your_name: Name

# lib/game_controller.dart
game_doesnt_exist: Game {} doesn't exist
incompatible_game_version: 'Incompatible game version. Host version: {hostVersion}, local version: {clientVersion}'
no_dictionaries_selected: No dictionaries selected

# lib/dictionary_selector.dart
dictionaries: Dictionaries

# lib/rules_screen.dart
hat_game_rules_title: Hat Game Rules
hat_game_rules_body: |
  ## Basics

  The goal of hat is to explain words as quickly as possible without using
  cognates.

  More precisely, explainer should obey the following rules:

  * **Don't use cognates.** E.g. you can't explain *displacement* as “moving
    something to another *place*”.
  * **Don't directly refer to similarly-sounding words.** E.g. you can't explain
    *avocado* as “a fruit that sounds similar to *advocate*”. However you can
    say “a fruit that sounds similar to a defender in court”.
  * **Speak only in English.** E.g. you can't explain *slowly* as “*despacito*
    in English”.
  * **Don't ask to translate into other languages.** E.g. you can't explain
    *entrepreneur* as “translate *businessman* to French”. You can still say
    “*businessman* synonym”. RULE VARIANT: no such limitation.
  * **Do gesture if you want.** RULE VARIANT: gesturing is forbidden.

  ## Additional rules

  **Teaming.** It is possible to play with fixed teams or individually. Team
  score if the total number of words explained within the team. Individual score
  is the total number of words you explained plus the total number of words you
  guessed.

  **Explaining and guessing.** As soon as you explain one word, you get a new
  one. You may explain as many words as you can in one turn. The guesser has
  unlimited attempts to guess the word. Wrong guesses are not penalized.

  **Bonus time.** If bonus time is greater than zero, then each turn has a “last
  guess” phase. During this phase the explainer is not allowed to say or gesture
  any more, and the guesser has one last opportunity to guess the word. Only one
  guess is allowed during this phase. If the guess is correct, the explainer
  should checkmark the word in the list.

  **Skipping words.** Skipping words is not allowed. If you don't know the
  meaning of the word, try to rely on a hunch, explain something that sounds
  similar, or break the word into parts and explain them separately.

  **Post-turn corrections.** If there was a mistake during the explanation, it
  is possible to correct the results in the post-turn screen. You could either
  remove the word completely via the trash button, or uncheck the word, in which
  case it goes back into the hat, and somebody will draw the word again later.
  Use the first option if the word was explained incorrectly, e.g. if you
  accidentally used a cognate. Use the second option if the word was guessed
  incorrectly, but you only realized it afterwards.

  ## Game variants

  * [**Pluralias.**](internal:/pluralias) Explain autogenerated portmanteau
    words instead of regular words.

# lib/rules_config_view.dart
bonus_time: Bonus time
dictionaries_many: 'Dictionaries:'
dictionaries_none: 'Dictionaries:   —'
dictionary_one: 'Dictionary: '
pluralias: Pluralias
random_words: Random words
s: s
timer: Timer
turn_time: Turn time
words: Words
words_per_player: Words per player
write_words: Write words
pluralias_help_title: About pluralias
pluralias_help_body: |
  What is *pluralias*? It's a portmanteau word that combines _plur**al**_ and
  _**al**ias_ by common letters.

  In this mode the app will automatically generate such portmanteau words (call
  them pluraliases), and you need to explain them. The source words are taken
  from ordinary dictionaries. The words are used as is, without abbreviations or
  alterations. Words always intersect by at least two letters, so
  _mo**tor**rent_ and _mot**or**acle_ are pluraliases, but _moto**r**ock_ is
  not.

  To get the most fun out of the hat with pluraliases, we recommend not to view
  it as competitive, but rather to relax, choose simpler dictionaries and try to
  explain each combined word by its meaning as a single entity. For example, you
  could explain *ancientity* as “a very very old item”, *flightning* as “the
  process or trying to escape an electric shock from the sky” and *miracleaning*
  as “tidying up the apartment with divine power”.

  Oh, and don't worry if you had zero pluraliases explained in the first five
  rounds. It gets better! And it's fun anyway :)

# lib/local_storage.dart
player_name_contains_invalid_character: "Player name contains invalid character: '{char}' (code {code})"
player_name_is_empty: Player name is empty
player_name_too_long: Player name too long

# lib/about_screen.dart
about_hat_game: About Hat Game App

# lib/score_view.dart
game_log: Game Log
game_over: Game Over
rematch: Rematch!

# lib/game_view.dart
discard_word: Discard word
done: Done
flag_the_word: Raise a problem with the word (invalid explanation, word not actually guessed)
restore_word: Restore word
somebody_flagged_the_word: Somebody thinks there was a problem with the word (invalid explanation, word not actually guessed)
pull_to_start: Go?
release_to_start: Go!
word_feedback_clear: Clear
word_feedback_nice: Nice
word_feedback_too_easy: Too easy
word_feedback_too_hard: Too hard
word_feedback_ugly: Ugly
words_in_hat: 'Words in hat: {}'

# lib/game_navigator.dart
leave: Leave
leave_game: Leave game?
reconnect_link_hint: 'To re-connect, use this link:'
stay: Stay

# lib/teaming_config_view.dart
teaming: Play Partners
teaming_individual: Individual
teaming_individual_description: All possible player pairs will play together. Your score is the sum of words explained and words guessed.
teaming_one_to_all: One to all
teaming_one_to_all_description: Uncompetitive mode. Take turns explaining words to everyone else.
teaming_random_pairs: Random pairs
teaming_random_pairs_description: Players are randomly split into pairs. If there is an odd number of players, a random player will seat out.
teaming_random_teams: Random teams
teaming_random_teams_description: Players are randomly grouped together to form a given number of teams.
teaming_manual_teams: Manual mode
teaming_manual_teams_description: Create pairs or teams manually.
team_number: Team number
not_enough_players: Not enough players
players_per_team: {
  one: '{} player per team',
  other: '{} players per team',
}

# lib/app_settings.dart
app_language: App Language
app_settings: App Settings
language: 'Language: '
system_default: System default
